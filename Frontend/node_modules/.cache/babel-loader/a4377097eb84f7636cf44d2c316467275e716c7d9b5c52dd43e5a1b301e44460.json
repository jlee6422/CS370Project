{"ast":null,"code":"var _jsxFileName = \"/Users/raphaelpalacio/Documents/GitHub/CS370Project/src/pages/ChatComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport socketService from \"./SocketService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatComponent = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  useEffect(() => {\n    socketService.setMessageHandler(data => {\n      setMessages(prevMessages => [...prevMessages, {\n        sender: \"other\",\n        text: data\n      }]);\n    });\n  }, []);\n  const handleSendMessage = () => {\n    if (newMessage.trim()) {\n      setMessages([...messages, {\n        sender: \"user\",\n        text: newMessage\n      }]);\n      socketService.sendMessage(newMessage);\n      setNewMessage(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${message.sender}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMessage,\n        onChange: e => setNewMessage(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatComponent, \"bFuYpZWMfOU2WhBa/CyaGkj6fmk=\");\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","useEffect","socketService","jsxDEV","_jsxDEV","ChatComponent","_s","messages","setMessages","newMessage","setNewMessage","setMessageHandler","data","prevMessages","sender","text","handleSendMessage","trim","sendMessage","className","children","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/raphaelpalacio/Documents/GitHub/CS370Project/src/pages/ChatComponent.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport socketService from \"./SocketService\";\n\nconst ChatComponent = () => {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  useEffect(() => {\n    socketService.setMessageHandler((data) => {\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { sender: \"other\", text: data },\n      ]);\n    });\n  }, []);\n\n  const handleSendMessage = () => {\n    if (newMessage.trim()) {\n      setMessages([...messages, { sender: \"user\", text: newMessage }]);\n      socketService.sendMessage(newMessage);\n      setNewMessage(\"\");\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-messages\">\n        {messages.map((message, index) => (\n          <div key={index} className={`chat-message ${message.sender}`}>\n            {message.text}\n          </div>\n        ))}\n      </div>\n      <div className=\"chat-input\">\n        <input\n          type=\"text\"\n          value={newMessage}\n          onChange={(e) => setNewMessage(e.target.value)}\n          placeholder=\"Type your message...\"\n        />\n        <button onClick={handleSendMessage}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACdC,aAAa,CAACS,iBAAiB,CAAEC,IAAI,IAAK;MACxCJ,WAAW,CAAEK,YAAY,IAAK,CAC5B,GAAGA,YAAY,EACf;QAAEC,MAAM,EAAE,OAAO;QAAEC,IAAI,EAAEH;MAAK,CAAC,CAChC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIP,UAAU,CAACQ,IAAI,CAAC,CAAC,EAAE;MACrBT,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;QAAEO,MAAM,EAAE,MAAM;QAAEC,IAAI,EAAEN;MAAW,CAAC,CAAC,CAAC;MAChEP,aAAa,CAACgB,WAAW,CAACT,UAAU,CAAC;MACrCC,aAAa,CAAC,EAAE,CAAC;IACnB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKe,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BhB,OAAA;MAAKe,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3Bb,QAAQ,CAACc,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BnB,OAAA;QAAiBe,SAAS,EAAG,gBAAeG,OAAO,CAACR,MAAO,EAAE;QAAAM,QAAA,EAC1DE,OAAO,CAACP;MAAI,GADLQ,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNvB,OAAA;MAAKe,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBhB,OAAA;QACEwB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEpB,UAAW;QAClBqB,QAAQ,EAAGC,CAAC,IAAKrB,aAAa,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC/CI,WAAW,EAAC;MAAsB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACFvB,OAAA;QAAQ8B,OAAO,EAAElB,iBAAkB;QAAAI,QAAA,EAAC;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrB,EAAA,CAzCID,aAAa;AAAA8B,EAAA,GAAb9B,aAAa;AA2CnB,eAAeA,aAAa;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}