{"ast":null,"code":"var _jsxFileName = \"/Users/raphaelpalacio/Documents/GitHub/CS370Project/src/pages/Profile/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Profile.css';\nimport EditableUserProfile from './components/EditableUserProfile';\nimport UserProfile from './components/UserProfile';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction randomColor() {\n  return \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n}\nfunction randomName() {\n  return \"Set Your Name\";\n}\nfunction Profile() {\n  _s();\n  const now = new Date(Date.now());\n  const defaultBirthday = new Date(now.getTime() + 86400000);\n  const [editMode, setEditMode] = useState(false);\n  const [name, setName] = useState(() => {\n    const storedName = localStorage.getItem('name');\n    return storedName ? storedName : randomName();\n  });\n  const [month, setMonth] = useState(() => {\n    const storedMonth = parseInt(localStorage.getItem('month'));\n    return !isNaN(storedMonth) ? storedMonth : defaultBirthday.getMonth();\n  });\n  const [day, setDay] = useState(() => {\n    const storedDay = parseInt(localStorage.getItem('day'));\n    return !isNaN(storedDay) ? storedDay : defaultBirthday.getDate();\n  });\n  const [color, setColor] = useState(randomColor());\n  const [sessionCount, setSessionCount] = useState(() => {\n    const storedSessionCount = localStorage.getItem(\"sessionCount\");\n    return storedSessionCount ? parseInt(storedSessionCount) : 0;\n  });\n  const stored = {\n    name,\n    month,\n    day,\n    color\n  };\n  const isBirthdayToday = now.getMonth() === month && now.getDate() === day;\n  useEffect(() => {\n    localStorage.setItem('name', name);\n  }, [name]);\n  useEffect(() => {\n    localStorage.setItem('month', month);\n  }, [month]);\n  useEffect(() => {\n    localStorage.setItem('day', day);\n  }, [day]);\n  useEffect(() => {\n    // Update session count when it changes\n    localStorage.setItem(\"sessionCount\", sessionCount.toString());\n  }, [sessionCount]);\n  function handleEditComplete(result) {\n    if (result != null) {\n      setName(result.name);\n      setMonth(result.month);\n      setDay(result.day);\n      setColor(result.color);\n    }\n    setEditMode(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: editMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(EditableUserProfile, {\n          stored: stored,\n          editCompleteCallback: handleEditComplete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [isBirthdayToday ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"birthday\",\n          children: \"Happy Birthday!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 39\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Total Sessions: \", sessionCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 43\n        }, this), /*#__PURE__*/_jsxDEV(UserProfile, {\n          stored: stored,\n          startEditCallback: () => setEditMode(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n_s(Profile, \"rVUnR6kfBS69sJM0QZASbwZ31ZY=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","EditableUserProfile","UserProfile","jsxDEV","_jsxDEV","Fragment","_Fragment","randomColor","Math","floor","random","toString","randomName","Profile","_s","now","Date","defaultBirthday","getTime","editMode","setEditMode","name","setName","storedName","localStorage","getItem","month","setMonth","storedMonth","parseInt","isNaN","getMonth","day","setDay","storedDay","getDate","color","setColor","sessionCount","setSessionCount","storedSessionCount","stored","isBirthdayToday","setItem","handleEditComplete","result","className","children","fileName","_jsxFileName","lineNumber","columnNumber","editCompleteCallback","startEditCallback","_c","$RefreshReg$"],"sources":["/Users/raphaelpalacio/Documents/GitHub/CS370Project/src/pages/Profile/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Profile.css';\nimport EditableUserProfile from './components/EditableUserProfile';\nimport UserProfile from './components/UserProfile';\n\nfunction randomColor() {\n    return \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n}\n\nfunction randomName() {\n    return \"Set Your Name\";\n}\n\nfunction Profile() {\n    const now = new Date(Date.now());\n    const defaultBirthday = new Date(now.getTime() + 86400000);\n\n    const [editMode, setEditMode] = useState(false);\n    const [name, setName] = useState(() => {\n        const storedName = localStorage.getItem('name');\n        return storedName ? storedName : randomName();\n    });\n\n    const [month, setMonth] = useState(() => {\n        const storedMonth = parseInt(localStorage.getItem('month'));\n        return !isNaN(storedMonth) ? storedMonth : defaultBirthday.getMonth();\n    });\n\n    const [day, setDay] = useState(() => {\n        const storedDay = parseInt(localStorage.getItem('day'));\n        return !isNaN(storedDay) ? storedDay : defaultBirthday.getDate();\n    });\n\n    const [color, setColor] = useState(randomColor());\n    const [sessionCount, setSessionCount] = useState(() => {\n        const storedSessionCount = localStorage.getItem(\"sessionCount\");\n        return storedSessionCount ? parseInt(storedSessionCount) : 0;\n    });\n\n    const stored = { name, month, day, color };\n    const isBirthdayToday = now.getMonth() === month && now.getDate() === day;\n\n    useEffect(() => {\n        localStorage.setItem('name', name);\n    }, [name]);\n\n    useEffect(() => {\n        localStorage.setItem('month', month);\n    }, [month]);\n\n    useEffect(() => {\n        localStorage.setItem('day', day);\n    }, [day]);\n\n    useEffect(() => {\n        // Update session count when it changes\n        localStorage.setItem(\"sessionCount\", sessionCount.toString());\n    }, [sessionCount]);\n\n    function handleEditComplete(result) {\n        if (result != null) {\n            setName(result.name);\n            setMonth(result.month);\n            setDay(result.day);\n            setColor(result.color);\n        }\n        setEditMode(false);\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"App\">\n                {\n                    editMode\n                        ? <>\n                            <h1>My Profile</h1>\n                            <EditableUserProfile\n                                stored={stored}\n                                editCompleteCallback={handleEditComplete}\n                            />\n                        </>\n                        : <>\n                            {\n                                isBirthdayToday\n                                    ? <div className=\"birthday\">Happy Birthday!</div>\n                                    : <h1>My Profile</h1>\n                            }\n                                          <div>Total Sessions: {sessionCount}</div>\n                            <UserProfile\n                                stored={stored}\n                                startEditCallback={() => setEditMode(true)}\n                            />\n                        </>\n                }\n                \n\n            </div>\n        </div>\n    );\n}\n\nexport default Profile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}