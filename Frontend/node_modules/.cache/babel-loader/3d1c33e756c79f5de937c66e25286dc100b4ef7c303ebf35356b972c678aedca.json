{"ast":null,"code":"var _jsxFileName = \"/Users/raphaelpalacio/Documents/GitHub/CS370Project/src/pages/Alarm/Settings.js\",\n  _s = $RefreshSig$();\nimport ReactSlider from 'react-slider';\nimport './slider.css';\nimport SettingsContext from \"./SettingsContext\";\nimport { useContext } from \"react\";\nimport BackButton from \"./BackButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Settings() {\n  _s();\n  const {\n    workMinutes,\n    breakMinutes,\n    setWorkMinutes,\n    setBreakMinutes,\n    setShowSettings\n  } = useContext(SettingsContext);\n  const settingsInfo = useContext(SettingsContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'left',\n      paddingTop: '130px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"work: \", settingsInfo.workMinutes, \":00\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactSlider, {\n      className: 'slider',\n      thumbClassName: 'thumb',\n      trackClassName: 'track',\n      value: workMinutes,\n      onChange: newValue => setWorkMinutes(newValue),\n      min: 1,\n      max: 120\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"break: \", settingsInfo.breakMinutes, \":00\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactSlider, {\n      className: 'slider green',\n      thumbClassName: 'thumb',\n      trackClassName: 'track',\n      value: breakMinutes,\n      onChange: newValue => setBreakMinutes(newValue),\n      min: 1,\n      max: 120\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(BackButton, {\n        onClick: () => setShowSettings(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(Settings, \"q7IcnYULzA5WHdFk4ZMVJ280WfA=\");\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["ReactSlider","SettingsContext","useContext","BackButton","jsxDEV","_jsxDEV","Settings","_s","workMinutes","breakMinutes","setWorkMinutes","setBreakMinutes","setShowSettings","settingsInfo","style","textAlign","paddingTop","children","fileName","_jsxFileName","lineNumber","columnNumber","className","thumbClassName","trackClassName","value","onChange","newValue","min","max","marginTop","onClick","_c","$RefreshReg$"],"sources":["/Users/raphaelpalacio/Documents/GitHub/CS370Project/src/pages/Alarm/Settings.js"],"sourcesContent":["import ReactSlider from 'react-slider';\nimport './slider.css'\nimport SettingsContext from \"./SettingsContext\";\nimport {useContext} from \"react\";\nimport BackButton from \"./BackButton\";\n\n\nfunction Settings() {\n  const { workMinutes, breakMinutes, setWorkMinutes, setBreakMinutes, setShowSettings } = useContext(SettingsContext);\n\n  const settingsInfo = useContext(SettingsContext);\n  return(\n    <div style={{textAlign:'left', paddingTop: '130px'}}>\n      <label>work: {settingsInfo.workMinutes}:00</label>\n      <ReactSlider\n        className={'slider'}\n        thumbClassName={'thumb'}\n        trackClassName={'track'}\n        value={workMinutes}\n        onChange={newValue => setWorkMinutes(newValue)}\n        min={1}\n        max={120}\n      />\n      <label>break: {settingsInfo.breakMinutes}:00</label>\n      <ReactSlider\n        className={'slider green'}\n        thumbClassName={'thumb'}\n        trackClassName={'track'}\n        value={breakMinutes}\n        onChange={newValue => setBreakMinutes(newValue)}\n        min={1}\n        max={120}\n      />\n      <div style={{textAlign:'center', marginTop:'20px'}}>\n        <BackButton onClick={() => setShowSettings(false)} />\n      </div>\n\n    </div>\n  );\n}\n\nexport default Settings;"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,cAAc;AACtC,OAAO,cAAc;AACrB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAAQC,UAAU,QAAO,OAAO;AAChC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGtC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM;IAAEC,WAAW;IAAEC,YAAY;IAAEC,cAAc;IAAEC,eAAe;IAAEC;EAAgB,CAAC,GAAGV,UAAU,CAACD,eAAe,CAAC;EAEnH,MAAMY,YAAY,GAAGX,UAAU,CAACD,eAAe,CAAC;EAChD,oBACEI,OAAA;IAAKS,KAAK,EAAE;MAACC,SAAS,EAAC,MAAM;MAAEC,UAAU,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAClDZ,OAAA;MAAAY,QAAA,GAAO,QAAM,EAACJ,YAAY,CAACL,WAAW,EAAC,KAAG;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAClDhB,OAAA,CAACL,WAAW;MACVsB,SAAS,EAAE,QAAS;MACpBC,cAAc,EAAE,OAAQ;MACxBC,cAAc,EAAE,OAAQ;MACxBC,KAAK,EAAEjB,WAAY;MACnBkB,QAAQ,EAAEC,QAAQ,IAAIjB,cAAc,CAACiB,QAAQ,CAAE;MAC/CC,GAAG,EAAE,CAAE;MACPC,GAAG,EAAE;IAAI;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eACFhB,OAAA;MAAAY,QAAA,GAAO,SAAO,EAACJ,YAAY,CAACJ,YAAY,EAAC,KAAG;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACpDhB,OAAA,CAACL,WAAW;MACVsB,SAAS,EAAE,cAAe;MAC1BC,cAAc,EAAE,OAAQ;MACxBC,cAAc,EAAE,OAAQ;MACxBC,KAAK,EAAEhB,YAAa;MACpBiB,QAAQ,EAAEC,QAAQ,IAAIhB,eAAe,CAACgB,QAAQ,CAAE;MAChDC,GAAG,EAAE,CAAE;MACPC,GAAG,EAAE;IAAI;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eACFhB,OAAA;MAAKS,KAAK,EAAE;QAACC,SAAS,EAAC,QAAQ;QAAEe,SAAS,EAAC;MAAM,CAAE;MAAAb,QAAA,eACjDZ,OAAA,CAACF,UAAU;QAAC4B,OAAO,EAAEA,CAAA,KAAMnB,eAAe,CAAC,KAAK;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV;AAACd,EAAA,CAhCQD,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAkCjB,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}