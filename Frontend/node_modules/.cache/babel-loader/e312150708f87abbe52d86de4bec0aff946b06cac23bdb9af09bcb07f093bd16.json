{"ast":null,"code":"var _jsxFileName = \"/Users/raphaelpalacio/Documents/GitHub/CS370Project/src/pages/Profile/components/UserProfile.js\",\n  _s = $RefreshSig$();\nimport Group from './Group';\nimport { months, calcButtonTextColor } from '../tools';\nimport SettingsContext from './SettingsContext'; // Import SettingsContext\nimport React, { useContext, useEffect, useState } from 'react';\nimport \"./UserProfile.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditableUserProfile({\n  stored,\n  startEditCallback\n}) {\n  _s();\n  const {\n    sessionCount,\n    setSessionCount\n  } = useContext(SettingsContext); // Access sessionCount from SettingsContext\n\n  const buttonStyle = {\n    backgroundColor: stored.color,\n    color: calcButtonTextColor(stored.color)\n  };\n  const h2Style = {\n    color: 'black' // Change color to your desired color\n  };\n  useEffect(() => {\n    // Update session count in local storage when it changes\n    localStorage.setItem(\"sessionCount\", sessionCount.toString());\n  }, [sessionCount]);\n\n  // Initialize session count from localStorage on component mount\n  useEffect(() => {\n    const storedSessionCount = localStorage.getItem(\"sessionCount\");\n    if (storedSessionCount) {\n      setSessionCount(parseInt(storedSessionCount));\n    }\n  }, [setSessionCount]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Group, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: h2Style,\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), \" \", stored.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Group, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: h2Style,\n        children: \"Birthday:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), \" \", months.getShortName(stored.month), \" \", stored.day]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Group, {\n      style: {\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          backgroundColor: 'white',\n          color: 'black'\n        } // Set both background and text color to black\n        ,\n        onClick: startEditCallback,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(EditableUserProfile, \"5l1O/TUEYbXinzNEV5Qa7VRJ/dE=\");\n_c = EditableUserProfile;\nvar _c;\n$RefreshReg$(_c, \"EditableUserProfile\");","map":{"version":3,"names":["Group","months","calcButtonTextColor","SettingsContext","React","useContext","useEffect","useState","jsxDEV","_jsxDEV","EditableUserProfile","stored","startEditCallback","_s","sessionCount","setSessionCount","buttonStyle","backgroundColor","color","h2Style","localStorage","setItem","toString","storedSessionCount","getItem","parseInt","children","style","fileName","_jsxFileName","lineNumber","columnNumber","name","getShortName","month","day","marginTop","onClick","_c","$RefreshReg$"],"sources":["/Users/raphaelpalacio/Documents/GitHub/CS370Project/src/pages/Profile/components/UserProfile.js"],"sourcesContent":["import Group from './Group';\r\nimport { months, calcButtonTextColor } from '../tools';\r\nimport SettingsContext from './SettingsContext'; // Import SettingsContext\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport \"./UserProfile.css\";\r\n\r\nexport default function EditableUserProfile({\r\n    stored,\r\n    startEditCallback\r\n}) {\r\n    const { sessionCount, setSessionCount } = useContext(SettingsContext); // Access sessionCount from SettingsContext\r\n\r\n    const buttonStyle = {\r\n        backgroundColor: stored.color,\r\n        color: calcButtonTextColor(stored.color)\r\n    };\r\n\r\n    const h2Style = {\r\n        color: 'black', // Change color to your desired color\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Update session count in local storage when it changes\r\n        localStorage.setItem(\"sessionCount\", sessionCount.toString());\r\n    }, [sessionCount]);\r\n\r\n    // Initialize session count from localStorage on component mount\r\n    useEffect(() => {\r\n        const storedSessionCount = localStorage.getItem(\"sessionCount\");\r\n        if (storedSessionCount) {\r\n            setSessionCount(parseInt(storedSessionCount));\r\n        }\r\n    }, [setSessionCount]);\r\n\r\n    return (\r\n        <div>\r\n            <Group>\r\n                <h2 style={h2Style}>Name:</h2> {stored.name}\r\n            </Group>\r\n            <Group>\r\n                <h2 style={h2Style}>Birthday:</h2> {months.getShortName(stored.month)} {stored.day}\r\n            </Group>\r\n\r\n            {/* Add some margin or padding to create space */}\r\n            <Group style={{ marginTop: '20px' }}>\r\n            <button\r\n    style={{ backgroundColor: 'white', color: 'black' }} // Set both background and text color to black\r\n    onClick={startEditCallback}\r\n>\r\n    Edit\r\n</button>\r\n            </Group>\r\n        </div>\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,SAAS;AAC3B,SAASC,MAAM,EAAEC,mBAAmB,QAAQ,UAAU;AACtD,OAAOC,eAAe,MAAM,mBAAmB,CAAC,CAAC;AACjD,OAAOC,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,eAAe,SAASC,mBAAmBA,CAAC;EACxCC,MAAM;EACNC;AACJ,CAAC,EAAE;EAAAC,EAAA;EACC,MAAM;IAAEC,YAAY;IAAEC;EAAgB,CAAC,GAAGV,UAAU,CAACF,eAAe,CAAC,CAAC,CAAC;;EAEvE,MAAMa,WAAW,GAAG;IAChBC,eAAe,EAAEN,MAAM,CAACO,KAAK;IAC7BA,KAAK,EAAEhB,mBAAmB,CAACS,MAAM,CAACO,KAAK;EAC3C,CAAC;EAED,MAAMC,OAAO,GAAG;IACZD,KAAK,EAAE,OAAO,CAAE;EACpB,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACZ;IACAc,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEP,YAAY,CAACQ,QAAQ,CAAC,CAAC,CAAC;EACjE,CAAC,EAAE,CAACR,YAAY,CAAC,CAAC;;EAElB;EACAR,SAAS,CAAC,MAAM;IACZ,MAAMiB,kBAAkB,GAAGH,YAAY,CAACI,OAAO,CAAC,cAAc,CAAC;IAC/D,IAAID,kBAAkB,EAAE;MACpBR,eAAe,CAACU,QAAQ,CAACF,kBAAkB,CAAC,CAAC;IACjD;EACJ,CAAC,EAAE,CAACR,eAAe,CAAC,CAAC;EAErB,oBACIN,OAAA;IAAAiB,QAAA,gBACIjB,OAAA,CAACT,KAAK;MAAA0B,QAAA,gBACFjB,OAAA;QAAIkB,KAAK,EAAER,OAAQ;QAAAO,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,KAAC,EAACpB,MAAM,CAACqB,IAAI;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eACRtB,OAAA,CAACT,KAAK;MAAA0B,QAAA,gBACFjB,OAAA;QAAIkB,KAAK,EAAER,OAAQ;QAAAO,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,KAAC,EAAC9B,MAAM,CAACgC,YAAY,CAACtB,MAAM,CAACuB,KAAK,CAAC,EAAC,GAAC,EAACvB,MAAM,CAACwB,GAAG;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/E,CAAC,eAGRtB,OAAA,CAACT,KAAK;MAAC2B,KAAK,EAAE;QAAES,SAAS,EAAE;MAAO,CAAE;MAAAV,QAAA,eACpCjB,OAAA;QACRkB,KAAK,EAAE;UAAEV,eAAe,EAAE,OAAO;UAAEC,KAAK,EAAE;QAAQ,CAAE,CAAC;QAAA;QACrDmB,OAAO,EAAEzB,iBAAkB;QAAAc,QAAA,EAC9B;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd;AAAClB,EAAA,CAhDuBH,mBAAmB;AAAA4B,EAAA,GAAnB5B,mBAAmB;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}