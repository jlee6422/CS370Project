{"ast":null,"code":"var _jsxFileName = \"/Users/joohalee/Desktop/CS370Project/src/pages/Alarm/TimerFunction.js\",\n  _s = $RefreshSig$();\nimport './TimerFunction.css';\nimport Timer from \"./Timer\";\nimport Settings from \"./Settings\";\nimport { useState, useEffect, useContext } from \"react\";\nimport SettingsContext from \"./SettingsContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Function() {\n  _s();\n  const settingsInfo = useContext(SettingsContext);\n\n  // const [showSettings, setShowSettings] = useState(false);\n  // const [workMinutes, setWorkMinutes] = useState(45);\n  // const [breakMinutes, setBreakMinutes] = useState(15);\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: settingsInfo.showSettings ? /*#__PURE__*/_jsxDEV(Settings, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 38\n    }, this) : /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 53\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(Function, \"I8Uq6SmA7PGlwgU1vD82sVLSchk=\");\n_c = Function;\nexport default Function;\nvar _c;\n$RefreshReg$(_c, \"Function\");","map":{"version":3,"names":["Timer","Settings","useState","useEffect","useContext","SettingsContext","jsxDEV","_jsxDEV","Function","_s","settingsInfo","children","showSettings","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/joohalee/Desktop/CS370Project/src/pages/Alarm/TimerFunction.js"],"sourcesContent":["import './TimerFunction.css';\nimport Timer from \"./Timer\";\nimport Settings from \"./Settings\";\nimport {useState, useEffect, useContext} from \"react\";\nimport SettingsContext from \"./SettingsContext\";\n\nfunction Function() {\n  const settingsInfo = useContext(SettingsContext);\n\n  \n  // const [showSettings, setShowSettings] = useState(false);\n  // const [workMinutes, setWorkMinutes] = useState(45);\n  // const [breakMinutes, setBreakMinutes] = useState(15);\n \n\n  return (\n    <main>\n      {}\n        {settingsInfo.showSettings ? <Settings /> : <Timer />}\n      {}\n    </main>\n  );\n}\n\nexport default Function;\n"],"mappings":";;AAAA,OAAO,qBAAqB;AAC5B,OAAOA,KAAK,MAAM,SAAS;AAC3B,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAAQC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAO,OAAO;AACrD,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,YAAY,GAAGN,UAAU,CAACC,eAAe,CAAC;;EAGhD;EACA;EACA;;EAGA,oBACEE,OAAA;IAAAI,QAAA,EAEKD,YAAY,CAACE,YAAY,gBAAGL,OAAA,CAACN,QAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAGT,OAAA,CAACP,KAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEnD,CAAC;AAEX;AAACP,EAAA,CAhBQD,QAAQ;AAAAS,EAAA,GAART,QAAQ;AAkBjB,eAAeA,QAAQ;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}